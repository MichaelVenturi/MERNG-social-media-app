[{"C:\\Users\\micha\\Desktop\\CSstuff\\TTP\\notes\\crud-practice\\merng\\client\\src\\index.js":"1","C:\\Users\\micha\\Desktop\\CSstuff\\TTP\\notes\\crud-practice\\merng\\client\\src\\reportWebVitals.js":"2","C:\\Users\\micha\\Desktop\\CSstuff\\TTP\\notes\\crud-practice\\merng\\client\\src\\App.js":"3","C:\\Users\\micha\\Desktop\\CSstuff\\TTP\\notes\\crud-practice\\merng\\client\\src\\ApolloProvider.js":"4","C:\\Users\\micha\\Desktop\\CSstuff\\TTP\\notes\\crud-practice\\merng\\client\\src\\pages\\Home.js":"5","C:\\Users\\micha\\Desktop\\CSstuff\\TTP\\notes\\crud-practice\\merng\\client\\src\\pages\\Login.js":"6","C:\\Users\\micha\\Desktop\\CSstuff\\TTP\\notes\\crud-practice\\merng\\client\\src\\pages\\Register.js":"7","C:\\Users\\micha\\Desktop\\CSstuff\\TTP\\notes\\crud-practice\\merng\\client\\src\\components\\MenuBar.js":"8","C:\\Users\\micha\\Desktop\\CSstuff\\TTP\\notes\\crud-practice\\merng\\client\\src\\components\\PostCard.js":"9","C:\\Users\\micha\\Desktop\\CSstuff\\TTP\\notes\\crud-practice\\merng\\client\\src\\util\\hooks.js":"10","C:\\Users\\micha\\Desktop\\CSstuff\\TTP\\notes\\crud-practice\\merng\\client\\src\\context\\auth.js":"11"},{"size":456,"mtime":1611266496686,"results":"12","hashOfConfig":"13"},{"size":362,"mtime":499162500000,"results":"14","hashOfConfig":"13"},{"size":770,"mtime":1611275127790,"results":"15","hashOfConfig":"13"},{"size":423,"mtime":1611266696675,"results":"16","hashOfConfig":"13"},{"size":1108,"mtime":1611270821156,"results":"17","hashOfConfig":"13"},{"size":2206,"mtime":1611276572136,"results":"18","hashOfConfig":"13"},{"size":3113,"mtime":1611275291285,"results":"19","hashOfConfig":"13"},{"size":1502,"mtime":1611276553693,"results":"20","hashOfConfig":"13"},{"size":1520,"mtime":1611270716014,"results":"21","hashOfConfig":"13"},{"size":416,"mtime":1611273878254,"results":"22","hashOfConfig":"13"},{"size":1344,"mtime":1611277294325,"results":"23","hashOfConfig":"13"},{"filePath":"24","messages":"25","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"26","usedDeprecatedRules":"27"},"26dmc7",{"filePath":"28","messages":"29","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"27"},{"filePath":"30","messages":"31","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"27"},{"filePath":"32","messages":"33","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"27"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"27"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"38","usedDeprecatedRules":"27"},{"filePath":"39","messages":"40","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"41","usedDeprecatedRules":"27"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"27"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"27"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"27"},"C:\\Users\\micha\\Desktop\\CSstuff\\TTP\\notes\\crud-practice\\merng\\client\\src\\index.js",["51"],"import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport reportWebVitals from \"./reportWebVitals\";\nimport ApolloProvider from \"./ApolloProvider\";\n\nReactDOM.render(ApolloProvider, document.getElementById(\"root\"));\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n",["52","53"],"C:\\Users\\micha\\Desktop\\CSstuff\\TTP\\notes\\crud-practice\\merng\\client\\src\\reportWebVitals.js",[],"C:\\Users\\micha\\Desktop\\CSstuff\\TTP\\notes\\crud-practice\\merng\\client\\src\\App.js",[],"C:\\Users\\micha\\Desktop\\CSstuff\\TTP\\notes\\crud-practice\\merng\\client\\src\\ApolloProvider.js",[],"C:\\Users\\micha\\Desktop\\CSstuff\\TTP\\notes\\crud-practice\\merng\\client\\src\\pages\\Home.js",[],"C:\\Users\\micha\\Desktop\\CSstuff\\TTP\\notes\\crud-practice\\merng\\client\\src\\pages\\Login.js",["54"],"import React, { useContext, useState } from \"react\";\r\nimport { Form, Button } from \"semantic-ui-react\";\r\nimport { useMutation } from \"@apollo/client\";\r\nimport gql from \"graphql-tag\";\r\n\r\nimport { AuthContext } from \"../context/auth\";\r\nimport { useForm } from \"../util/hooks\";\r\n\r\nfunction Login(props) {\r\n  const [errors, setErrors] = useState({});\r\n\r\n  const { onChange, onSubmit, values } = useForm(loginUserCallback, {\r\n    username: \"\",\r\n    password: \"\",\r\n  });\r\n\r\n  const [loginUser, { loading }] = useMutation(LOGIN_USER, {\r\n    update(_, result) {\r\n      console.log(result);\r\n      props.history.push(\"/\");\r\n    },\r\n    onError(err) {\r\n      setErrors(err.graphQLErrors[0].extensions.exception.errors);\r\n    },\r\n    variables: values,\r\n  });\r\n  function loginUserCallback() {\r\n    loginUser();\r\n  }\r\n\r\n  return (\r\n    <div className=\"form-container\">\r\n      <Form onSubmit={onSubmit} noValidate className={loading ? \"loading\" : \"\"}>\r\n        <h1>Login</h1>\r\n        <Form.Input\r\n          label=\"Username\"\r\n          placeholder=\"Username\"\r\n          name=\"username\"\r\n          type=\"text\"\r\n          value={values.username}\r\n          error={errors.username ? true : false}\r\n          onChange={onChange}\r\n        />\r\n        <Form.Input\r\n          label=\"Password\"\r\n          placeholder=\"Password\"\r\n          name=\"password\"\r\n          type=\"password\"\r\n          value={values.password}\r\n          error={errors.password ? true : false}\r\n          onChange={onChange}\r\n        />\r\n        <Button type=\"submit\" primary>\r\n          Login\r\n        </Button>\r\n      </Form>\r\n      {Object.keys(errors).length > 0 && (\r\n        <div className=\"ui error message\">\r\n          <ul className=\"list\">\r\n            {Object.values(errors).map((value) => (\r\n              <li key={value}>{value}</li>\r\n            ))}\r\n          </ul>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nconst LOGIN_USER = gql`\r\n  mutation login($username: String!, $password: String!) {\r\n    login(username: $username, password: $password) {\r\n      id\r\n      email\r\n      username\r\n      createdAt\r\n      token\r\n    }\r\n  }\r\n`;\r\n\r\nexport default Login;\r\n","C:\\Users\\micha\\Desktop\\CSstuff\\TTP\\notes\\crud-practice\\merng\\client\\src\\pages\\Register.js",["55"],"import React, { useContext, useState } from \"react\";\r\nimport { Form, Button } from \"semantic-ui-react\";\r\nimport { useMutation } from \"@apollo/client\";\r\nimport gql from \"graphql-tag\";\r\n\r\nimport { AuthContext } from \"../context/auth\";\r\nimport { useForm } from \"../util/hooks\";\r\n\r\nfunction Register(props) {\r\n  const [errors, setErrors] = useState({});\r\n\r\n  const initialState = {\r\n    username: \"\",\r\n    email: \"\",\r\n    password: \"\",\r\n    confirmPassword: \"\",\r\n  };\r\n\r\n  const { onChange, onSubmit, values } = useForm(registerUser, {\r\n    username: \"\",\r\n    email: \"\",\r\n    password: \"\",\r\n    confirmPassword: \"\",\r\n  });\r\n\r\n  function registerUser() {\r\n    addUser();\r\n  }\r\n\r\n  const [addUser, { loading }] = useMutation(REGISTER_USER, {\r\n    update(_, result) {\r\n      console.log(result);\r\n      props.history.push(\"/\");\r\n    },\r\n    onError(err) {\r\n      setErrors(err.graphQLErrors[0].extensions.exception.errors);\r\n    },\r\n    variables: values,\r\n  });\r\n\r\n  return (\r\n    <div className=\"form-container\">\r\n      <Form onSubmit={onSubmit} noValidate className={loading ? \"loading\" : \"\"}>\r\n        <h1>Register</h1>\r\n        <Form.Input\r\n          label=\"Username\"\r\n          placeholder=\"Username\"\r\n          name=\"username\"\r\n          type=\"text\"\r\n          value={values.username}\r\n          error={errors.username ? true : false}\r\n          onChange={onChange}\r\n        />\r\n        <Form.Input\r\n          label=\"Email\"\r\n          placeholder=\"Email\"\r\n          name=\"email\"\r\n          type=\"email\"\r\n          value={values.email}\r\n          error={errors.email ? true : false}\r\n          onChange={onChange}\r\n        />\r\n        <Form.Input\r\n          label=\"Password\"\r\n          placeholder=\"Password\"\r\n          name=\"password\"\r\n          type=\"password\"\r\n          value={values.password}\r\n          error={errors.password ? true : false}\r\n          onChange={onChange}\r\n        />\r\n        <Form.Input\r\n          label=\"Confirm Password\"\r\n          placeholder=\"Confirm Password\"\r\n          name=\"confirmPassword\"\r\n          type=\"password\"\r\n          value={values.confirmPassword}\r\n          error={errors.confirmPassword ? true : false}\r\n          onChange={onChange}\r\n        />\r\n        <Button type=\"submit\" primary>\r\n          Register\r\n        </Button>\r\n      </Form>\r\n      {Object.keys(errors).length > 0 && (\r\n        <div className=\"ui error message\">\r\n          <ul className=\"list\">\r\n            {Object.values(errors).map((value) => (\r\n              <li key={value}>{value}</li>\r\n            ))}\r\n          </ul>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nconst REGISTER_USER = gql`\r\n  mutation register(\r\n    $username: String!\r\n    $email: String!\r\n    $password: String!\r\n    $confirmPassword: String!\r\n  ) {\r\n    register(\r\n      registerInput: {\r\n        username: $username\r\n        email: $email\r\n        password: $password\r\n        confirmPassword: $confirmPassword\r\n      }\r\n    ) {\r\n      id\r\n      email\r\n      username\r\n      createdAt\r\n      token\r\n    }\r\n  }\r\n`;\r\n\r\nexport default Register;\r\n","C:\\Users\\micha\\Desktop\\CSstuff\\TTP\\notes\\crud-practice\\merng\\client\\src\\components\\MenuBar.js",[],"C:\\Users\\micha\\Desktop\\CSstuff\\TTP\\notes\\crud-practice\\merng\\client\\src\\components\\PostCard.js",[],"C:\\Users\\micha\\Desktop\\CSstuff\\TTP\\notes\\crud-practice\\merng\\client\\src\\util\\hooks.js",[],["56","57"],"C:\\Users\\micha\\Desktop\\CSstuff\\TTP\\notes\\crud-practice\\merng\\client\\src\\context\\auth.js",[],{"ruleId":"58","severity":1,"message":"59","line":1,"column":8,"nodeType":"60","messageId":"61","endLine":1,"endColumn":13},{"ruleId":"62","replacedBy":"63"},{"ruleId":"64","replacedBy":"65"},{"ruleId":"58","severity":1,"message":"66","line":6,"column":10,"nodeType":"60","messageId":"61","endLine":6,"endColumn":21},{"ruleId":"58","severity":1,"message":"67","line":11,"column":9,"nodeType":"60","messageId":"61","endLine":11,"endColumn":21},{"ruleId":"62","replacedBy":"68"},{"ruleId":"64","replacedBy":"69"},"no-unused-vars","'React' is defined but never used.","Identifier","unusedVar","no-native-reassign",["70"],"no-negated-in-lhs",["71"],"'AuthContext' is defined but never used.","'initialState' is assigned a value but never used.",["70"],["71"],"no-global-assign","no-unsafe-negation"]