[{"C:\\Users\\micha\\Desktop\\CSstuff\\TTP\\notes\\crud-practice\\merng\\client\\src\\index.js":"1","C:\\Users\\micha\\Desktop\\CSstuff\\TTP\\notes\\crud-practice\\merng\\client\\src\\reportWebVitals.js":"2","C:\\Users\\micha\\Desktop\\CSstuff\\TTP\\notes\\crud-practice\\merng\\client\\src\\App.js":"3","C:\\Users\\micha\\Desktop\\CSstuff\\TTP\\notes\\crud-practice\\merng\\client\\src\\ApolloProvider.js":"4","C:\\Users\\micha\\Desktop\\CSstuff\\TTP\\notes\\crud-practice\\merng\\client\\src\\pages\\Home.js":"5","C:\\Users\\micha\\Desktop\\CSstuff\\TTP\\notes\\crud-practice\\merng\\client\\src\\pages\\Login.js":"6","C:\\Users\\micha\\Desktop\\CSstuff\\TTP\\notes\\crud-practice\\merng\\client\\src\\pages\\Register.js":"7","C:\\Users\\micha\\Desktop\\CSstuff\\TTP\\notes\\crud-practice\\merng\\client\\src\\components\\MenuBar.js":"8","C:\\Users\\micha\\Desktop\\CSstuff\\TTP\\notes\\crud-practice\\merng\\client\\src\\components\\PostCard.js":"9","C:\\Users\\micha\\Desktop\\CSstuff\\TTP\\notes\\crud-practice\\merng\\client\\src\\util\\hooks.js":"10","C:\\Users\\micha\\Desktop\\CSstuff\\TTP\\notes\\crud-practice\\merng\\client\\src\\context\\auth.js":"11","C:\\Users\\micha\\Desktop\\CSstuff\\TTP\\notes\\crud-practice\\merng\\client\\src\\util\\AuthRoute.js":"12","C:\\Users\\micha\\Desktop\\CSstuff\\TTP\\notes\\crud-practice\\merng\\client\\src\\components\\PostForm.js":"13","C:\\Users\\micha\\Desktop\\CSstuff\\TTP\\notes\\crud-practice\\merng\\client\\src\\util\\graphql.js":"14","C:\\Users\\micha\\Desktop\\CSstuff\\TTP\\notes\\crud-practice\\merng\\client\\src\\components\\DeleteButton.js":"15","C:\\Users\\micha\\Desktop\\CSstuff\\TTP\\notes\\crud-practice\\merng\\client\\src\\components\\LikeButton.js":"16","C:\\Users\\micha\\Desktop\\CSstuff\\TTP\\notes\\crud-practice\\merng\\client\\src\\pages\\SinglePost.js":"17","C:\\Users\\micha\\Desktop\\CSstuff\\TTP\\notes\\crud-practice\\merng\\client\\src\\util\\MyPopup.js":"18"},{"size":456,"mtime":1611266496686,"results":"19","hashOfConfig":"20"},{"size":362,"mtime":499162500000,"results":"21","hashOfConfig":"20"},{"size":936,"mtime":1611283314095,"results":"22","hashOfConfig":"20"},{"size":683,"mtime":1611279168780,"results":"23","hashOfConfig":"20"},{"size":1238,"mtime":1611279660529,"results":"24","hashOfConfig":"20"},{"size":2206,"mtime":1611276572136,"results":"25","hashOfConfig":"20"},{"size":3113,"mtime":1611275291285,"results":"26","hashOfConfig":"20"},{"size":1502,"mtime":1611276553693,"results":"27","hashOfConfig":"20"},{"size":1662,"mtime":1611287260218,"results":"28","hashOfConfig":"20"},{"size":418,"mtime":1611279071861,"results":"29","hashOfConfig":"20"},{"size":1344,"mtime":1611277294325,"results":"30","hashOfConfig":"20"},{"size":438,"mtime":1611277549138,"results":"31","hashOfConfig":"20"},{"size":1992,"mtime":1611279550304,"results":"32","hashOfConfig":"20"},{"size":334,"mtime":1611278786394,"results":"33","hashOfConfig":"20"},{"size":2015,"mtime":1611287056378,"results":"34","hashOfConfig":"20"},{"size":1491,"mtime":1611287119972,"results":"35","hashOfConfig":"20"},{"size":5175,"mtime":1611287200055,"results":"36","hashOfConfig":"20"},{"size":214,"mtime":1611286969111,"results":"37","hashOfConfig":"20"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"40","usedDeprecatedRules":"41"},"26dmc7",{"filePath":"42","messages":"43","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"41"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"46","messages":"47","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"48","messages":"49","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"50","messages":"51","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"52","usedDeprecatedRules":"41"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"55","usedDeprecatedRules":"41"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"41"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"60","messages":"61","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"62","messages":"63","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"41"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"66","messages":"67","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"68","messages":"69","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"70","messages":"71","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"72","messages":"73","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"74","messages":"75","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"76","messages":"77","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\micha\\Desktop\\CSstuff\\TTP\\notes\\crud-practice\\merng\\client\\src\\index.js",["78"],"import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport reportWebVitals from \"./reportWebVitals\";\nimport ApolloProvider from \"./ApolloProvider\";\n\nReactDOM.render(ApolloProvider, document.getElementById(\"root\"));\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n",["79","80"],"C:\\Users\\micha\\Desktop\\CSstuff\\TTP\\notes\\crud-practice\\merng\\client\\src\\reportWebVitals.js",[],"C:\\Users\\micha\\Desktop\\CSstuff\\TTP\\notes\\crud-practice\\merng\\client\\src\\App.js",[],"C:\\Users\\micha\\Desktop\\CSstuff\\TTP\\notes\\crud-practice\\merng\\client\\src\\ApolloProvider.js",[],"C:\\Users\\micha\\Desktop\\CSstuff\\TTP\\notes\\crud-practice\\merng\\client\\src\\pages\\Home.js",["81","82"],"C:\\Users\\micha\\Desktop\\CSstuff\\TTP\\notes\\crud-practice\\merng\\client\\src\\pages\\Login.js",["83"],"import React, { useContext, useState } from \"react\";\r\nimport { Form, Button } from \"semantic-ui-react\";\r\nimport { useMutation } from \"@apollo/client\";\r\nimport gql from \"graphql-tag\";\r\n\r\nimport { AuthContext } from \"../context/auth\";\r\nimport { useForm } from \"../util/hooks\";\r\n\r\nfunction Login(props) {\r\n  const [errors, setErrors] = useState({});\r\n\r\n  const { onChange, onSubmit, values } = useForm(loginUserCallback, {\r\n    username: \"\",\r\n    password: \"\",\r\n  });\r\n\r\n  const [loginUser, { loading }] = useMutation(LOGIN_USER, {\r\n    update(_, result) {\r\n      console.log(result);\r\n      props.history.push(\"/\");\r\n    },\r\n    onError(err) {\r\n      setErrors(err.graphQLErrors[0].extensions.exception.errors);\r\n    },\r\n    variables: values,\r\n  });\r\n  function loginUserCallback() {\r\n    loginUser();\r\n  }\r\n\r\n  return (\r\n    <div className=\"form-container\">\r\n      <Form onSubmit={onSubmit} noValidate className={loading ? \"loading\" : \"\"}>\r\n        <h1>Login</h1>\r\n        <Form.Input\r\n          label=\"Username\"\r\n          placeholder=\"Username\"\r\n          name=\"username\"\r\n          type=\"text\"\r\n          value={values.username}\r\n          error={errors.username ? true : false}\r\n          onChange={onChange}\r\n        />\r\n        <Form.Input\r\n          label=\"Password\"\r\n          placeholder=\"Password\"\r\n          name=\"password\"\r\n          type=\"password\"\r\n          value={values.password}\r\n          error={errors.password ? true : false}\r\n          onChange={onChange}\r\n        />\r\n        <Button type=\"submit\" primary>\r\n          Login\r\n        </Button>\r\n      </Form>\r\n      {Object.keys(errors).length > 0 && (\r\n        <div className=\"ui error message\">\r\n          <ul className=\"list\">\r\n            {Object.values(errors).map((value) => (\r\n              <li key={value}>{value}</li>\r\n            ))}\r\n          </ul>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nconst LOGIN_USER = gql`\r\n  mutation login($username: String!, $password: String!) {\r\n    login(username: $username, password: $password) {\r\n      id\r\n      email\r\n      username\r\n      createdAt\r\n      token\r\n    }\r\n  }\r\n`;\r\n\r\nexport default Login;\r\n","C:\\Users\\micha\\Desktop\\CSstuff\\TTP\\notes\\crud-practice\\merng\\client\\src\\pages\\Register.js",["84"],"import React, { useContext, useState } from \"react\";\r\nimport { Form, Button } from \"semantic-ui-react\";\r\nimport { useMutation } from \"@apollo/client\";\r\nimport gql from \"graphql-tag\";\r\n\r\nimport { AuthContext } from \"../context/auth\";\r\nimport { useForm } from \"../util/hooks\";\r\n\r\nfunction Register(props) {\r\n  const [errors, setErrors] = useState({});\r\n\r\n  const initialState = {\r\n    username: \"\",\r\n    email: \"\",\r\n    password: \"\",\r\n    confirmPassword: \"\",\r\n  };\r\n\r\n  const { onChange, onSubmit, values } = useForm(registerUser, {\r\n    username: \"\",\r\n    email: \"\",\r\n    password: \"\",\r\n    confirmPassword: \"\",\r\n  });\r\n\r\n  function registerUser() {\r\n    addUser();\r\n  }\r\n\r\n  const [addUser, { loading }] = useMutation(REGISTER_USER, {\r\n    update(_, result) {\r\n      console.log(result);\r\n      props.history.push(\"/\");\r\n    },\r\n    onError(err) {\r\n      setErrors(err.graphQLErrors[0].extensions.exception.errors);\r\n    },\r\n    variables: values,\r\n  });\r\n\r\n  return (\r\n    <div className=\"form-container\">\r\n      <Form onSubmit={onSubmit} noValidate className={loading ? \"loading\" : \"\"}>\r\n        <h1>Register</h1>\r\n        <Form.Input\r\n          label=\"Username\"\r\n          placeholder=\"Username\"\r\n          name=\"username\"\r\n          type=\"text\"\r\n          value={values.username}\r\n          error={errors.username ? true : false}\r\n          onChange={onChange}\r\n        />\r\n        <Form.Input\r\n          label=\"Email\"\r\n          placeholder=\"Email\"\r\n          name=\"email\"\r\n          type=\"email\"\r\n          value={values.email}\r\n          error={errors.email ? true : false}\r\n          onChange={onChange}\r\n        />\r\n        <Form.Input\r\n          label=\"Password\"\r\n          placeholder=\"Password\"\r\n          name=\"password\"\r\n          type=\"password\"\r\n          value={values.password}\r\n          error={errors.password ? true : false}\r\n          onChange={onChange}\r\n        />\r\n        <Form.Input\r\n          label=\"Confirm Password\"\r\n          placeholder=\"Confirm Password\"\r\n          name=\"confirmPassword\"\r\n          type=\"password\"\r\n          value={values.confirmPassword}\r\n          error={errors.confirmPassword ? true : false}\r\n          onChange={onChange}\r\n        />\r\n        <Button type=\"submit\" primary>\r\n          Register\r\n        </Button>\r\n      </Form>\r\n      {Object.keys(errors).length > 0 && (\r\n        <div className=\"ui error message\">\r\n          <ul className=\"list\">\r\n            {Object.values(errors).map((value) => (\r\n              <li key={value}>{value}</li>\r\n            ))}\r\n          </ul>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nconst REGISTER_USER = gql`\r\n  mutation register(\r\n    $username: String!\r\n    $email: String!\r\n    $password: String!\r\n    $confirmPassword: String!\r\n  ) {\r\n    register(\r\n      registerInput: {\r\n        username: $username\r\n        email: $email\r\n        password: $password\r\n        confirmPassword: $confirmPassword\r\n      }\r\n    ) {\r\n      id\r\n      email\r\n      username\r\n      createdAt\r\n      token\r\n    }\r\n  }\r\n`;\r\n\r\nexport default Register;\r\n","C:\\Users\\micha\\Desktop\\CSstuff\\TTP\\notes\\crud-practice\\merng\\client\\src\\components\\MenuBar.js",[],"C:\\Users\\micha\\Desktop\\CSstuff\\TTP\\notes\\crud-practice\\merng\\client\\src\\components\\PostCard.js",["85"],"C:\\Users\\micha\\Desktop\\CSstuff\\TTP\\notes\\crud-practice\\merng\\client\\src\\util\\hooks.js",[],"C:\\Users\\micha\\Desktop\\CSstuff\\TTP\\notes\\crud-practice\\merng\\client\\src\\context\\auth.js",[],"C:\\Users\\micha\\Desktop\\CSstuff\\TTP\\notes\\crud-practice\\merng\\client\\src\\util\\AuthRoute.js",[],"C:\\Users\\micha\\Desktop\\CSstuff\\TTP\\notes\\crud-practice\\merng\\client\\src\\components\\PostForm.js",[],"C:\\Users\\micha\\Desktop\\CSstuff\\TTP\\notes\\crud-practice\\merng\\client\\src\\util\\graphql.js",[],"C:\\Users\\micha\\Desktop\\CSstuff\\TTP\\notes\\crud-practice\\merng\\client\\src\\components\\DeleteButton.js",[],"C:\\Users\\micha\\Desktop\\CSstuff\\TTP\\notes\\crud-practice\\merng\\client\\src\\components\\LikeButton.js",[],"C:\\Users\\micha\\Desktop\\CSstuff\\TTP\\notes\\crud-practice\\merng\\client\\src\\pages\\SinglePost.js",[],"C:\\Users\\micha\\Desktop\\CSstuff\\TTP\\notes\\crud-practice\\merng\\client\\src\\util\\MyPopup.js",[],{"ruleId":"86","severity":1,"message":"87","line":1,"column":8,"nodeType":"88","messageId":"89","endLine":1,"endColumn":13},{"ruleId":"90","replacedBy":"91"},{"ruleId":"92","replacedBy":"93"},{"ruleId":"86","severity":1,"message":"94","line":2,"column":10,"nodeType":"88","messageId":"89","endLine":2,"endColumn":14},{"ruleId":"86","severity":1,"message":"95","line":3,"column":8,"nodeType":"88","messageId":"89","endLine":3,"endColumn":11},{"ruleId":"86","severity":1,"message":"96","line":6,"column":10,"nodeType":"88","messageId":"89","endLine":6,"endColumn":21},{"ruleId":"86","severity":1,"message":"97","line":11,"column":9,"nodeType":"88","messageId":"89","endLine":11,"endColumn":21},{"ruleId":"86","severity":1,"message":"98","line":2,"column":44,"nodeType":"88","messageId":"89","endLine":2,"endColumn":49},"no-unused-vars","'React' is defined but never used.","Identifier","unusedVar","no-native-reassign",["99"],"no-negated-in-lhs",["100"],"'from' is defined but never used.","'gql' is defined but never used.","'AuthContext' is defined but never used.","'initialState' is assigned a value but never used.","'Popup' is defined but never used.","no-global-assign","no-unsafe-negation"]